[versions]
log4j = "2.23.1"
slf4j = "2.0.12"
assertj = "3.25.3"
junit = "5.10.2"
testcontainers = "1.19.7"
jackson = "2.17.0"
awaitility = "4.2.1"
groovy = "4.0.18"
spock = "2.3-groovy-4.0"
kafka = "3.7.0"
chicory = "0.0.9"

versionsPlugin = "0.51.0"
spotlessPlugin = "6.25.0"
testLoggerPlugin = "4.0.0"
nexusPublishPlugin = "2.0.0"
axionReleasePlugin = "1.17.0"
testRetryPlugin = "1.5.8"
shadowPlugin = "8.1.1"

[libraries]
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainersJunit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainersRedpanda = { module = "org.testcontainers:redpanda", version.ref = "testcontainers" }
testcontainersSpock = { module = "org.testcontainers:spock", version.ref = "testcontainers" }
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
log4jApi = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4jCore = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4jSlf4j = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
log4j12 = { module = "org.apache.logging.log4j:log4j-1.2-api", version.ref = "log4j" }
kafkaConnectApi = { module = "org.apache.kafka:connect-api", version.ref = "kafka" }
kafkaConnectTransforms = { module = "org.apache.kafka:connect-transforms", version.ref = "kafka" }
kafkaConnectJson = { module = "org.apache.kafka:connect-json", version.ref = "kafka" }
kafkaConnectRuntime = { module = "org.apache.kafka:connect-runtime", version.ref = "kafka" }
kafkaConnectFile = { module = "org.apache.kafka:connect-file", version.ref = "kafka" }
kafkaClient = { module = "org.apache.kafka:kafka-clients", version.ref = "kafka" }
chikoryRuntime = { module = "com.dylibso.chicory:runtime", version.ref = "chicory"}
chicoryWasi = { module = "com.dylibso.chicory:wasi", version.ref = "chicory"}
jacksonCore = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson"}
jacksonDatabind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson"}

[bundles]
log4j        = [ "log4jApi", "log4jCore", "log4jSlf4j", "log4j12" ]
testing      = [ "junit", "assertj", "awaitility" ]
testingIt    = [ "testcontainers", "testcontainersJunit", "testcontainersSpock", "testcontainersRedpanda" ]
testingKafka = [ "kafkaClient", "kafkaConnectFile" ]
kafka        = [ "kafkaConnectApi", "kafkaConnectTransforms" , "kafkaConnectJson", "kafkaConnectRuntime"]
chicory      = [ "chikoryRuntime", "chicoryWasi" ]
jackson      = [ "jacksonCore", "jacksonDatabind" ]

[plugins]
versions     = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }
spotless     = { id = "com.diffplug.spotless", version.ref = "spotlessPlugin" }
nexusPublish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexusPublishPlugin" }
testLogger   = { id = "com.adarshr.test-logger", version.ref = "testLoggerPlugin" }
axionRelease = { id = "pl.allegro.tech.build.axion-release", version.ref = "axionReleasePlugin" }
testRetry    = { id = "org.gradle.test-retry", version.ref = "testRetryPlugin" }
shadow       = { id = "com.github.johnrengelman.shadow", version.ref = "shadowPlugin" }
